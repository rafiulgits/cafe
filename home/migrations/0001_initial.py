# Generated by Django 2.1.7 on 2019-05-25 03:39

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='BranchFood',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
        ),
        migrations.CreateModel(
            name='BranchStaff',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
        ),
        migrations.CreateModel(
            name='CafeBranch',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=30)),
                ('opening_time', models.TimeField()),
                ('closing_time', models.TimeField()),
                ('manager', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='FoodItem',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50)),
                ('description', models.TextField()),
                ('image', models.ImageField(upload_to='image/food/')),
                ('price', models.FloatField()),
                ('expired_date', models.DateField()),
            ],
        ),
        migrations.CreateModel(
            name='Order',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('cart_number', models.CharField(max_length=6, unique=True)),
                ('total', models.PositiveIntegerField()),
                ('request_on', models.DateTimeField(auto_now_add=True)),
                ('collection_time', models.TimeField()),
                ('delivered', models.BooleanField(default=False)),
                ('branch', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='home.CafeBranch')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='OrderCart',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('quantity', models.PositiveSmallIntegerField()),
                ('price', models.FloatField()),
                ('sub_total', models.PositiveIntegerField()),
                ('cart_number', models.CharField(max_length=6)),
                ('branch_food', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='home.BranchFood')),
            ],
        ),
        migrations.AddField(
            model_name='branchstaff',
            name='branch',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='home.CafeBranch'),
        ),
        migrations.AddField(
            model_name='branchstaff',
            name='staff',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='branchfood',
            name='branch',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='home.CafeBranch'),
        ),
        migrations.AddField(
            model_name='branchfood',
            name='food',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='home.FoodItem'),
        ),
        migrations.AlterUniqueTogether(
            name='branchfood',
            unique_together={('branch', 'food')},
        ),
    ]
